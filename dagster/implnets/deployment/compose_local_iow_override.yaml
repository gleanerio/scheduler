version: "3.9"

# networks: production uses traefik_proxy, buth
#  this is local testing


# DO NOT START IN PYCHARM (unless you set the env variables in your runconfig
# USE:
# ./docker_localstart.sh
services:
    dagster-dagit:
        volumes: &vol
          - ../configs/${PROJECT:-iow}/workspace.yaml:/usr/src/app/workspace.yaml
          - ../deployment/dagster.yaml:/usr/src/app/dagster.yaml
          - ../generatedCode/implnet-${PROJECT:-iow}/output/:/usr/src/app/project/${PROJECT:-iow}
          - ../workflows/:/usr/src/app/workflows
            # GLEANEERIO_  the environment variables for this stack, passed into containers
            # the variables passed into the containers varies due to inconsistent standards.
            # this there are prefixed by project aka ECRR_ for customization
            # DO NOT RENAME THE FIRST PART, aka the container environment variable,
            #     unless you sure what you are doing
        environment: &env
            - DEBUG=${DEBUG:-false}
            - PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python
            - PORTAINER_URL=${PORTAINER_URL}
            - PORTAINER_KEY=${PORTAINER_KEY}
            - GLEANERIO_GLEANER_IMAGE=${GLEANERIO_GLEANER_IMAGE}
            - GLEANERIO_NABU_IMAGE=${GLEANERIO_NABU_IMAGE}
            - GLEANERIO_LOG_PREFIX=${GLEANERIO_LOG_PREFIX}
            - GLEANERIO_MINIO_ADDRESS=${GLEANERIO_MINIO_ADDRESS}
            - GLEANERIO_MINIO_PORT=${GLEANERIO_MINIO_PORT}
            - GLEANERIO_MINIO_USE_SSL=${GLEANERIO_MINIO_USE_SSL}
            - GLEANERIO_MINIO_BUCKET=${GLEANERIO_MINIO_BUCKET}
            - GLEANERIO_MINIO_ACCESS_KEY=${GLEANERIO_MINIO_ACCESS_KEY}
            - GLEANERIO_MINIO_SECRET_KEY=${GLEANERIO_MINIO_SECRET_KEY}
            - GLEANERIO_HEADLESS_ENDPOINT=${GLEANERIO_HEADLESS_ENDPOINT}
            - GLEANERIO_HEADLESS_NETWORK=${GLEANERIO_HEADLESS_NETWORK}
            - GLEANERIO_GRAPH_URL=${GLEANERIO_GRAPH_URL}
            - GLEANERIO_GRAPH_NAMESPACE=${GLEANERIO_GRAPH_NAMESPACE}
            - GLEANERIO_NABU_CONFIG_PATH=${GLEANERIO_NABU_CONFIG_PATH:-/configs/gleaner/nabuconfig.yaml}
            - GLEANERIO_GLEANER_CONFIG_PATH=${GLEANERIO_GLEANER_CONFIG_PATH:-/configs/gleaner/gleanerconfig.yaml}
            - GLEANERIO_NABU_DOCKER_CONFIG=${GLEANERIO_NABU_DOCKER_CONFIG:-nabu}
            - GLEANERIO_GLEANER_DOCKER_CONFIG=${GLEANERIO_GLEANER_DOCKER_CONFIG:-gleaner}
            - GLEANERIO_DATAGRAPH_ENDPOINT=${GLEANERIO_DATAGRAPH_ENDPOINT}
            - GLEANERIO_PROVGRAPH_ENDPOINT=${GLEANERIO_PROVGRAPH_ENDPOINT}
#            - ECRR_MINIO_BUCKET="ECRR"
#            - ECRR_GRAPH_NAMESPACE="ECRR"
# caution for a portainer additional file deply
    # portainer issue, merging commands may need to create a combined customised on
        command: 'dagster-webserver  -w workspace.yaml  -h "0.0.0.0" -p 3000'
        depends_on: &deps
            - dagster-postgres
            - dagster-code-project
            - dagster-code-tasks
#            - dagster-code-iow-ecrr

    dagster-daemon:
# caution for a portainer additional file deply
    # portainer issue, merging commands may need to create a combined customised on
        command: "dagster-daemon run -w workspace.yaml  "
        depends_on: *deps

## GRPC servers are not just serving the code
# they need to compile it, so same image for all dagster-*
#    dagster-code-iow-ecrr:
#
#        platform: linux/x86_64
#        build:
#          #context: .
#          context: ..
#          dockerfile: build/Dockerfile_code
#          args:
#            implnet: ${PROJECT:-iow}
#        # you should be able to change the source locally, without a full rebuild.
#       #image: dagster-${PROJECT:-iow}:latest
#        image: dagster-gleanerio-local:latest
#
#        environment: *env
#        command:
#        - "dagster"
#        - "api"
#        - "grpc"
#        - "-h"
#        - "0.0.0.0"
#        - "-p"
#        - "4000"
#        - "--python-file"
#        - "/usr/src/app/workflows/ecrr/repositories/repository.py"
#        - "-d"
#        - "/usr/src/app/workflows/ecrr/"
#
#        volumes: *vol
#        depends_on:
#            - dagster-postgres
#        networks:
#            - traefik_proxy

